- hosts: all
  handlers:
    - name: restart mysql
      service:
        name: mysql
        state: restarted
      become: yes

    - name: restart apache
      service:
        name: apache2
        state: restarted
      become: yes

  tasks:
    - name: 'Instalar pacotes'
      apt:
        update_cache: yes
        cache_valid_time: 3600 #1 hora
        name: "{{ item }}"
        state: latest
      become: yes
      with_items:
        - php7.2
        - apache2
        - libapache2-mod-php7.2
        - php7.2-gd
        #- libssh2-php
        php libapache2-mod-php php-mysql

        - mcrypt
        - mysql-server
        - python-mysqldb
        - php7.2-mysql
        - python3
        - python3-pip
        - python2.7

        name: install PHP
apt: name={{item}} state=present
with_items:
    - php
    - php-mcrypt
    - php-mysql
    - php-common
    - php-mysql
    - php-tidy
    - php-xml
    - php-xmlrpc
    - php-mbstring
    - php-memcached
    - php-curl
    - php-zip

        #- name: 2. install PHP module for Apache
      #apt: name=libapache2-mod-php7.2  state=present

      #- name: 4. install Hello World PHP script
      #copy: src=index.php dest=/var/www/index.php mode=0664

    - name: Make sure pymysql is present
      become: true # needed if the other tasks are not played as root
      pip:
        name: pymysql
        state: present

    - name: 'Copiar arquivo mysqld.cnf'
      copy:
        src: /vagrant/mysqld.cnf
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        owner: root
        group: root
        mode: 0644
        remote_src: yes
      become: yes
      notify:
        - restart mysql

    - name: Create .my.cnf
      template:
        src: "client.my.cnf.j2"
        dest: "/root/.my.cnf"
        owner: root
        group: root
        mode: 0600
      become: yes

    - name: Set root user password
  # If .my.cnf already exists, this will cause an mysql-root-password update.
      mysql_user:
        name: 
        password: "12345"
        check_implicit_admin: true
      become: yes

    - name: 'Cria o banco no MySQL'
      mysql_db:
        name: wordpress_db
        login_user: root
        login_password: "12345"
        state: present
      become: yes

    - name: 'Cria usuario no MySQL'
      mysql_user: root
        login_user: root
        name: wordpress_user
        password: "12345"
        priv: 'wordpress_db.*:ALL'
        state: present
      become: yes

    - name: 'Baixa o arquivo de instalacao do Wordpress'
      get_url:
        url: 'https://wordpress.org/latest.tar.gz'
        dest: '/tmp/wordpress.tar.gz'
        mode: 0440
      become: yes

    - name: 'Descompacta o wordpress'
      unarchive:
        src: '/tmp/wordpress.tar.gz'
        dest: '/var/www/'
        remote_src: yes
      become: yes

    - copy:
        src: '/var/www/wordpress/wp-config-sample.php'
        dest: '/var/www/wordpress/wp-config.php'
        remote_src: yes
      become: yes

    - name: 'Configura o wp-config com as entradas do banco de dados'
      replace:
        path: '/var/www/wordpress/wp-config.php'
        regexp: "{{ item.regex }}"
        replace: "{{ item.value }}"
        backup: yes
      with_items:
        - { regex: 'database_name_here', value: 'wordpress_db'}
        - { regex: 'username_here', value: 'wordpress_user'}
        - { regex: 'password_here', value: '12345'}
      become: yes

    - name: 'Configura Apache para servir o Wordpress'
      copy:
        src: '000-default.conf'
        dest: '/etc/apache2/sites-available/000-default.conf'
      notify:
        - restart apache